
import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCertificationLatestService 
{
    @Service('RPTCertificationService')
    def certSvc 

	@Service('Var')
	def var

    @Service('RPTUtil')
	def util

    @ActiveDB('rptcertification')
    def em 

	
	@ProxyMethod
	public def createLatestAndExisting( cert ) {

		if (cert.faasid)
			certSvc.validateFaas(cert)

		certSvc.createCertification(cert)
		certSvc.buildFilter(cert)

		if (!cert.faasid)
			em.insertLastAndExistingItems(cert)

		return openCertification(cert.objid);
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		if (!cert.faasid){
			cert.items = em.getLatestAndExistingItems(cert).each{
                buildDescription(it)
			}
			certSvc.buildFootNotes(cert)
		}
		else{
			def certid = cert.objid
			cert.putAll(certSvc.getFaasInfo(cert.faasid))
			cert.objid = certid
		}
		return cert 
	}

	void buildDescription(item){
		def infos = []
		if ('land'.equalsIgnoreCase(item.rputype) && item.cadastrallotno){
			item.description = 'LOT ' + item.cadastrallotno 
		}
		else if ('bldg'.equalsIgnoreCase(item.rputype)){
			infos = em.getBldgInfos(item).each{
				bi.info = bi.bldgkind.name
				if (util.toBoolean(var.get('rptcertification_report_show_bldgtype'), true)) {
						bi.info = bi.bldgtype + ' - ' + bi.bldgkind.name
				}
			}
			if (infos){
				item.description = infos.info.join(',')
			}
		}
		else if ('mach'.equalsIgnoreCase(item.rputype)){
			infos = em.getMachInfos(item)
			if (infos){
				item.description = infos.machine.name.join(',')
			}
		}
		else if ('planttree'.equalsIgnoreCase(item.rputype)){
			infos = em.getPlantTreeInfos(item)
			if (infos){
				item.description = infos.planttree.name.join(',')
			}
		}
		else if ('misc'.equalsIgnoreCase(item.rputype)){
			infos = em.getMiscInfos(item)
			if (infos){
				item.description = infos.miscitem.name.join(',')
			}
		}
	}


	

}
