import com.rameses.annotations.*
import com.rameses.util.*;
import java.rmi.server.UID;

class EntityJuridicalPersistenceInterceptor  {

	@Service( dynamic=true )
	def dynaSvc; 

	@DataContext( dynamic=true )
	def dynaEm;


	@Before(pattern="PersistenceService.(create|update)", eval="#{args[0]._schemaname == 'entityjuridical'}", index=100)
	public void beforeSave( evt ) {
		def o = evt.args[0];
		if ( o.name ) { 
			o.entityname = o.name; 
		}
	}

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'entityjuridical'}", index=101)
	public void beforeSaveCreate( evt ) {
		def o = evt.args[0];

		//check if there are name matches
		if( !o.ignore_warning ) {
			def matchSvc = dynaSvc.lookup('JuridicalEntityNameMatchService'); 
			def list = matchSvc.getMatches( [name:o.name]);
			if(list) {
				throw new Warning("entityjuridical:matchname:warning", [list: list] );
			}
		}
	}

	@Before(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'entityjuridical'}", index=101)
	public void beforeCreate( evt ) {
		def o = evt.args[0];
		if ( !o.address?.text ) throw new Exception("Address is required");
		if ( o.orgtype=='SING' ) throw new Exception("Please select another org type"); 

		if ( !o.objid ) o.objid = "JUR"+new UID();
        if ( !o.entityno ) { 
        	def stype = 'J';
        	def seqSvc = dynaSvc.lookup('SequenceService'); 
            def seqno = seqSvc.getNextFormattedSeriesA( "JURIDICAL_ENTITY", 6 );
            if ( o.prefix ) { 
                o.entityno = ''+ o.prefix +'-'+ seqno + stype; 
            } else { 
                o.entityno = ''+ stype + seqno; 
            } 
        } 
		o.type = 'JURIDICAL';
		o.state = 'ACTIVE';

		//create the address first
		def addressEm = dynaEm.lookup('entity_address'); 
		def addr = addressEm.create( o.address );
		o.address.objid = addr.objid;	
	}

	@After(pattern="PersistenceService.create", eval="#{args[0]._schemaname == 'entityjuridical'}")
	public void afterCreate( evt ) {
		def o = evt.args[0];
		def addressEm = dynaEm.lookup('entity_address'); 
		addressEm.find([ objid: o.address.objid ]).update([ parentid: o.objid ]);
	}

	@After( pattern="ListService.getList", eval="#{args[0].name == 'entitytype'}", index=10 )
	public void getEntityTypeList( evt) {
		def list = evt.result;
		list << 'JURIDICAL'
	}

	@After(pattern="PersistenceService.read", eval="#{args[0]._schemaname == 'entityjuridical'}")
	public void afterRead( evt ) {
		def res = evt.result; 
		if ( res?.administrator?.objid ) {
			if ( res.administrator.objid == res.objid ) { 
				// do nothing 
			} 
			else {
				def entitySvc = dynaSvc.lookup('EntityService'); 
				def admin = entitySvc.open( res.administrator ); 
				res.administrator.putAll([ 
					type: admin.type, 
					lastname: admin.lastname, 
					firstname: admin.firstname, 
					middlename: admin.middlename 
				]); 
			}
		}
	}
}
